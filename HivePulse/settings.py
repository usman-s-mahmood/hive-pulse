"""
Django settings for HivePulse project.

Generated by 'django-admin startproject' using Django 5.2.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import os, base64
import json
from decouple import config
from imagekitio import ImageKit

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# with open(BASE_DIR / "secrets.json") as f:
#     secrets = json.load(f)

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = config('DEBUG')

ALLOWED_HOSTS = [config('HOSTS')]


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'AuthApp',
    'BlogApp',
    'MoviesApp',
    'ckeditor',
    'comment'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'HivePulse.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'HivePulse.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

encoded_cert = config("AIVEN_CA")
if encoded_cert:
    cert_path = os.path.join(
        BASE_DIR,
        'db_cert.pem'
    )
    # decoded_bytes = base64.b64decode(encoded_cert)
    # print(decoded_bytes.decode(
    #     'utf-8',
    #     errors='ignore'
    # ))
    with open(cert_path, 'wb') as file:
        file.write(base64.b64decode(encoded_cert))

else:
    cert_path = None

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': config("DB_NAME"),           
        'USER': config("DB_USER"),            
        'PASSWORD': config("DB_PASSWORD"),
        'HOST': config("DB_HOST"),
        'PORT': config("DB_PORT"),               
        'OPTIONS': {
            'init_command': "SET sql_mode='STRICT_TRANS_TABLES'",
            'ssl': {
                # 'ca': os.path.join(BASE_DIR, 'db_cert.pem'),
                'ca': cert_path,
            }
        },
    }
}

# use this command to run local mariaDB instance: sudo /opt/mariadb/bin/mysqld_safe --datadir=/opt/mariadb/data --port=3310 &
# use this command to create dump with sql and data of local db to use it in production DB: /opt/mariadb/bin/mysqldump -u root -p --port=3310 -h 127.0.0.1 hivepulse > hivepulse_dump.sql

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.mysql',
#         'NAME': 'hivepulse',           
#         'USER': 'root',            
#         'PASSWORD': '',
#         'HOST': '127.0.0.1',
#         'PORT': '3310',               
#         'OPTIONS': {
#             'init_command': "SET sql_mode='STRICT_TRANS_TABLES'",
#         },
#     }
# }



# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# manual configurations beyond this line

# setup for uploading media files
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# ckeditor configurations
CKEDITOR_CONFIGS = {
    'default': {
        'toolbar': 'full',
        # 'height': '720px',
        # 'width': "640px",
    },
}

LOGIN_URL = 'login_page'
LOGOUT_REDIRECT_URL =  '/auth/login'

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = config('EMAIL_HOST')
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = config("EMAIL_HOST_USER")
EMAIL_HOST_PASSWORD = config("EMAIL_HOST_PASSWORD")

DEFAULT_FROM_EMAIL = config("EMAIL_HOST_USER")

STATIC_ROOT = os.path.join(BASE_DIR, 'static')


# imagekit.io object initialization
imagekit = ImageKit(
    private_key=config("IMAGEKIT_PRIV_KEY"),
    public_key=config("IMAGEKIT_PUB_KEY"),
    url_endpoint=config("IMAGEKIT_URL")
)

# django comments dab setup
PROFILE_APP_NAME = 'AuthApp'
PROFILE_MODEL_NAME = 'Profile'
MAX_THREAD_LEVEL = 5
COMMENTS_DAB_MAX_THREAD_LEVEL = 3